name: Blobs Upgrader

on:
  schedule:
    - cron: '* 23 * * *'
  push:
    branches:
    - upgrader

jobs:
  upgrade:
    name: Upgrade bosh blobs
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Get Git Version
        run: |
          t="$(git describe --tags `git rev-list --tags --max-count=1`)" || true
          commit=$(git rev-parse HEAD)
          if [ -z "$t" ]
          then
              log=$(git log --pretty=oneline)
              t=0.0.0
          else
              log=$(git log $t..HEAD --pretty=oneline)
          fi
          level="minor"
          case "$log" in
              *#major* ) level="major";;
              *#patch* ) level="patch";;
          esac
          new_version="$(docker run --rm alpine/semver semver -c -i "$level" "$t")"
          echo $new_version > /home/runner/work/version.txt
      - name: Uprade bosh blobs
        uses: s4heid/bosh-blobs-upgrader-action@master
        with:
          repository: .
      # - name: Run tests against bosh on docker
      #   uses: s4heid/bosh-action@master
      #   with:
      #     script: ./ci/actions/test.sh
      - name: Upload blobs and create final release
        run: |
          set -ex

          bosh_cli_version=6.1.1
          mkdir -p /home/runner/work/_temp/bin
          wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-${bosh_cli_version}-linux-amd64 --output-document="/home/runner/work/_temp/bin/bosh" && \
            chmod +x /home/runner/work/_temp/bin/bosh

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A ; git status
          if git diff-index --cached --quiet HEAD -- config/blobs.yml ; then
             >&2 echo "no changes in config/blobs.yml" ; exit 1
          fi
          # /home/runner/work/_temp/bin/bosh upload-blobs
          git commit -m 'Updating blobs'

          /home/runner/work/_temp/bin/bosh create-release --tarball=athens-release.tgz --timestamp-version --force

          new_version="$(cat /home/runner/work/version.txt)"
          if [ -n "new_version" ]; then
            /home/runner/work/_temp/bin/bosh finalize-release --version "$new_version" athens-release.tgz
            git add -A ; git commit -m "Final release $new_version"
            git tag -s $new_version
          fi
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: HEAD:refs/heads/blobs
          force: true
      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
